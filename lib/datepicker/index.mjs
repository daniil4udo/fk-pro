import {
    createSectionFactory as e,
    createBaseSections as a,
    createMaskOverlaySections as n,
} from '../index.mjs';
const t = /* #__PURE__ */ e('dp'),
    {
        outer: l,
        wrapper: o,
        inner: r,
        icon: d,
        label: $,
        prefix: s,
        suffix: i,
        help: y,
        messages: u,
        message: p,
    } = /* #__PURE__ */ a(t),
    h = t('input', () => ({
        $el: 'input',
        bind: '$attrs',
        attrs: {
            name: '$node.name',
            id: '$id',
            onKeydown: '$handlers.inputKeydown',
            value: '$inputText',
            onInput: '$handlers.dateInput',
            onClick: '$pickerOnly && $handlers.open',
            onBlur: '$handlers._blur',
            onFocus: '$handlers.focus',
            readonly: '$pickerOnly || $expanded',
            disabled: '$disabled',
        },
    })),
    m = t('panelWrapper', () => ({
        $el: 'div',
        if: '$expanded',
        attrs: {
            id: '$id + "_popover"',
            role: 'dialog',
            onBlur: '$handlers._blurOut()',
            tabindex: '-1',
            popover: '$popover',
            'aria-modal': 'true',
            'aria-label': 'Choose date',
            'data-panel': '$panel',
            style: {
                if: '$usePopover',
                then: {
                    margin: 0,
                    top: '$popoverCoordinates.y + "px"',
                    left: '$popoverCoordinates.x + "px"',
                    width: '$popoverCoordinates.width + "px"',
                },
            },
        },
    })),
    b = t('next', () => ({
        $el: 'button',
        if: '$showPagination',
        attrs: {
            id: '$id + _next_button',
            type: 'button',
            onClick: '$handlers.next',
        },
    })),
    f = t('nextLabel', 'span'),
    c = t('prev', () => ({
        $el: 'button',
        if: '$showPagination',
        attrs: {
            id: '$id + _prev_button',
            type: 'button',
            onClick: '$handlers.prev',
        },
    })),
    v = t('prevLabel', 'span'),
    x = t('calendar', () => ({
        if: '$panel === "day"',
        $el: 'table',
        for: ['month', '$calendar'],
        attrs: { key: '$fns.format($month.monthDay, "YYYY-MM")' },
    })),
    k = t('calendarWeeks', () => ({ $el: 'tbody' })),
    w = t('calendarHeader', () => ({ $el: 'thead' })),
    _ = t('weekDays', () => ({ $el: 'tr' })),
    C = t('weekDay', () => ({
        $el: 'th',
        for: ['day', '$month.weeks.0'],
        attrs: { 'aria-label': '$fns.format($day, "dddd")' },
    })),
    D = t('week', () => ({
        $el: 'tr',
        for: ['week', 'weekIndex', '$month.weeks'],
    })),
    I = t('dayCell', () => ({
        $el: 'td',
        for: ['day', 'dayIndex', '$week'],
        attrs: {
            key: '$day',
            onClick: '$handlers.setDate($day)',
            onKeydown: '$handlers.keyDown',
            onMouseenter: '$handlers.mouseEnter($day)',
            onMouseleave: '$handlers.mouseLeave',
            onBlur: '$handlers._blurOut(day)',
            tabindex: '$fns.sameDay($day) && "0" || "-1"',
            'data-is-extra': '$fns.notInMonth($month.monthDay, $day)',
            'data-disabled': '$fns.isDisabled($day)',
            'aria-selected':
                '$selectedWeek === $weekIndex && $selectedDay === $dayIndex',
            'aria-label': '$fns.format($day, "long")',
        },
    })),
    B = t('day', 'div'),
    M = t('openButton', () => ({
        $el: 'div',
        attrs: {
            style: '$visibilityStyles',
            id: '$id + "_listbox_button"',
            type: 'div',
            role: 'button',
            onClick: '$handlers.open',
            onKeydown: '$handlers.openKeydown',
            tabIndex: '$pickerOnly && "-1" || "0"',
            'data-disabled': '$disabled',
            'aria-disabled': '$disabled',
            'aria-label':
                '$value && ($ui.changeDate.value + ", " + $inputText) || $ui.chooseDate.value',
            'aria-haspopup': 'true',
            'aria-expanded': '$expanded',
            'aria-controls': '$expanded && $id + "_listbox" || undefined',
        },
    })),
    Y = t('years', () => ({
        if: '$panel === "year"',
        $el: 'ul',
        attrs: { id: '$id + "_years"' },
    })),
    g = t('year', () => ({
        for: ['year', 'yearIndex', '$years'],
        $el: 'li',
        attrs: {
            key: '$: "year" + $fns.format($year, "YYYY")',
            onClick: '$handlers.setDate($year)',
            onKeydown: '$handlers.keyDown',
            onMouseenter: '$handlers.mouseEnter($year)',
            onMouseleave: '$handlers.mouseLeave',
            onBlur: '$handlers._blurOut(year)',
            tabindex: '$fns.sameYear($year) && "0" || "-1"',
            'aria-selected': '$selectedYear === $yearIndex',
            'data-disabled': '$fns.isDisabledYear($year)',
            'aria-label': '$fns.format($year, $yearFormat)',
        },
    })),
    K = t('months', () => ({ if: '$panel === "month"', $el: 'ul' })),
    O = t('month', () => ({
        $el: 'li',
        for: ['month', 'index', '$months'],
        attrs: {
            key: '$month',
            onClick: '$handlers.setDate($month)',
            onKeydown: '$handlers.keyDown',
            onMouseenter: '$handlers.mouseEnter($month)',
            onMouseleave: '$handlers.mouseLeave',
            onBlur: '$handlers._blurOut(month)',
            tabindex: '$fns.sameMonth($month) && "0" || "-1"',
            'aria-selected': '$selectedMonth === $index',
            'data-disabled': '$fns.isDisabledMonth($month)',
        },
    })),
    P = t('panelHeader', () => ({
        $el: 'header',
        attrs: { 'aria-live': 'polite' },
    })),
    T = t('yearsHeader', () => ({ $el: 'div', if: '$panel === "year"' })),
    H = t('monthsHeader', () => ({ $el: 'div', if: '$panel === "month"' })),
    L = t('daysHeader', () => ({ $el: 'div', if: '$panel === "day"' })),
    F = t('timeHeader', () => ({ $el: 'div', if: '$panel === "time"' })),
    E = t('yearButton', () => ({
        $el: 'button',
        attrs: {
            type: 'button',
            id: '$id + _year_button',
            onClick: '$handlers.jumpTo(year)',
        },
        children: '$fns.format($renderedDate, $yearFormat)',
    })),
    j = t('monthButton', () => ({
        $el: 'button',
        attrs: {
            type: 'button',
            id: '$id + _month_button',
            onClick: '$handlers.jumpTo(month)',
        },
        children: '$fns.format($renderedDate, $monthButtonFormat)',
    })),
    W = t('dayButton', () => ({
        $el: 'button',
        attrs: {
            type: 'button',
            id: '$id + _day_button',
            onClick: '$handlers.jumpTo(day)',
            tabindex: '2',
        },
        children: '$fns.format($renderedDate, $dayButtonFormat)',
    })),
    S = t('removeSelection', () => ({
        $el: 'button',
        if: '$clearable && $_value',
        attrs: {
            id: '$id + "_remove_selection"',
            type: 'button',
            onClick: '$handlers.clear',
            'aria-controls': '$id',
        },
    })),
    q = t('time', () => ({ $el: 'div', if: '$panel === "time"' })),
    z = t('timeInput', () => ({
        $el: 'input',
        attrs: {
            type: 'time',
            value: '$localTime',
            onInput: '$handlers.localTime',
            onKeydown: '$handlers.keyDown',
            spellcheck: 'false',
            onBlur: '$handlers._blurOut(time)',
        },
    })),
    A = t('panelClose', () => ({
        $el: 'button',
        if: '$showPanelClose && ($inline === undefined || $inline === false)',
        attrs: {
            type: 'button',
            class: '$classes.panelClose',
            onClick: '$handlers.closePanel',
            tabindex: -1,
            'aria-label': '$ui.close.value',
        },
    })),
    {
        overlayPlaceholder: G,
        overlayLiteral: J,
        overlayChar: N,
        overlayEnum: Q,
        overlay: R,
        overlayParts: U,
        overlayInner: V,
    } = /* #__PURE__ */ n(t),
    X = t('panel', 'div');
export {
    x as calendar,
    w as calendarHeader,
    k as calendarWeeks,
    t as createSection,
    B as day,
    W as dayButton,
    I as dayCell,
    L as daysHeader,
    y as help,
    d as icon,
    r as inner,
    h as input,
    $ as label,
    p as message,
    u as messages,
    O as month,
    j as monthButton,
    K as months,
    H as monthsHeader,
    b as next,
    f as nextLabel,
    M as openButton,
    l as outer,
    R as overlay,
    N as overlayChar,
    Q as overlayEnum,
    V as overlayInner,
    J as overlayLiteral,
    U as overlayParts,
    G as overlayPlaceholder,
    X as panel,
    A as panelClose,
    P as panelHeader,
    m as panelWrapper,
    s as prefix,
    c as prev,
    v as prevLabel,
    S as removeSelection,
    i as suffix,
    q as time,
    F as timeHeader,
    z as timeInput,
    D as week,
    C as weekDay,
    _ as weekDays,
    o as wrapper,
    g as year,
    E as yearButton,
    Y as years,
    T as yearsHeader,
};
